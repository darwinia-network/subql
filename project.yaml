---
dataSources:
  - kind: substrate/Runtime
    mapping:
      handlers:
        - handler: handleBlock
          kind: substrate/BlockHandler
        - filter:
            method: Deposit
            module: balances
          handler: handleEvent
          kind: substrate/EventHandler
        - handler: handleCall
          kind: substrate/CallHandler
    name: main
    startBlock: 4987300
description: ''
network:
  endpoint: wss://crab-rpc.darwinia.network/
  types:
    AccountData:
      feeFrozen: Balance
      free: Balance
      freeKton: Balance
      miscFrozen: Balance
      reserved: Balance
      reservedKton: Balance
    AccountInfo:
      data: AccountData
      nonce: Index
      refcount: RefCount
    AccountSigner: MultiSigner
    Address: MultiAddress
    AddressT: '[u8; 20; AddressT]'
    AncestryProof: ()
    Announcement: ProxyAnnouncement
    AuthorityId: '[u8;32]'
    AuthoritySet:
      authorities: AuthorityList
      set_id: SetId
    AuthoritySignature: '[u8;64]'
    BSCHeader:
      coinbase: EthereumAddress
      difficulty: U256
      extraData: Bytes
      gasLimit: U256
      gasUsed: U256
      logBloom: Bloom
      mixDigest: H256
      nonce: Bytes
      number: u64
      parentHash: H256
      receiptsRoot: H256
      stateRoot: H256
      timestamp: u64
      transactionsRoot: H256
      uncleHash: H256
    BabeEpochConfiguration: 'Null'
    BalanceInfo: '{}'
    BalanceLock:
      id: LockIdentifier
      lockFor: LockFor
      reasons: Reasons
    BlockNumberFor: BlockNumber
    Bloom: '[u8; 256; Bloom]'
    BridgedBlockHash: MillauBlockHash
    BridgedBlockNumber: MillauBlockNumber
    BridgedHeader: MillauHeader
    BridgedOpaqueCall: Vec<u8>
    CallOrigin:
      _enum:
        SourceAccount: SourceAccountId
        SourceRoot: ()
        TargetAccount: (SourceAccountId, MultiSigner, MultiSignature)
    ChainId: '[u8; 4]'
    ChainProperties:
      ss58Format: Option<u8>
      tokenDecimals: Option<Vec<u32>>
      tokenSymbol: Option<Vec<Text>>
    Commit:
      precommits: Vec<SignedPrecommit>
      target_hash: BridgedBlockHash
      target_number: BridgedBlockNumber
    Common:
      amount: Balance
    CompactAssignments: CompactAssignmentsWith16
    DepositId: U256
    EcdsaAddress: EthereumAddress
    EcdsaMessage: H256
    EcdsaSignature: '[u8; 65; EcdsaSignature]'
    ElectionCompute:
      _enum:
        - OnChain
        - Signed
        - Authority
    ElectionResultT:
      compute: ElectionCompute
      electedStashes: Vec<AccountId>
      exposures: Vec<(AccountId, ExposureT)>
    EthashProof:
      dagNodes: (H512, H512)
      proof: Vec<H128>
    EthereumAddress: H160
    EthereumBlockNumber: u64
    EthereumHeader:
      author: EthereumAddress
      baseFeePerGas: Option<U256>
      blockHash: Option<H256>
      difficulty: U256
      extraData: Bytes
      gasLimit: U256
      gasUsed: U256
      logBloom: Bloom
      number: EthereumBlockNumber
      parentHash: H256
      receiptsRoot: H256
      seal: Vec<Bytes>
      stateRoot: H256
      timestamp: u64
      transactionsRoot: H256
      unclesHash: H256
    EthereumNetwork:
      _enum:
        Mainnet: 'Null'
        Ropsten: 'Null'
    EthereumNetworkType:
      _enum:
        Mainnet: 'Null'
        Ropsten: 'Null'
    EthereumReceipt:
      gasUsed: U256
      logBloom: Bloom
      logs: Vec<LogEntry>
      outcome: TransactionOutcome
    EthereumReceiptProof:
      headerHash: H256
      index: u64
      proof: Bytes
    EthereumReceiptProofThing: (EthereumHeader, EthereumReceiptProof, MMRProof)
    EthereumRelayHeaderParcel:
      header: EthereumHeader
      parentMmrRoot: H256
    EthereumRelayProofs:
      ethashProof: Vec<EthashProof>
      mmrProof: Vec<H256>
    EthereumTransactionIndex: (H256, u64)
    Exposure: ExposureT
    ExposureT:
      others: Vec<IndividualExposure>
      ownKtonBalance: Compact<Balance>
      ownPower: Power
      ownRingBalance: Compact<Balance>
      totalPower: Power
    Fee: MillauBalance
    GrandpaJustification:
      commit: Commit
      round: u64
      votes_ancestries: Vec<BridgedHeader>
    H128: '[u8; 16; H128]'
    Id: '[u8; 4]'
    ImportedHeader:
      header: BridgedHeader
      is_finalized: bool
      requires_justification: bool
      signal_hash: Option<BridgedBlockHash>
    InboundLaneData:
      last_confirmed_nonce: MessageNonce
      relayers: Vec<(MessageNonce, MessageNonce, RelayerId)>
    InboundRelayer: AccountId
    IndividualExposure:
      ktonBalance: Compact<Balance>
      power: Power
      ringBalance: Compact<Balance>
      who: AccountId
    InitializationData:
      authority_list: AuthorityList
      header: Header
      is_halted: bool
      set_id: SetId
    KtonBalance: Balance
    LaneId: '[u8; 4]'
    LockFor:
      _enum:
        Common: Common
        Staking: StakingLock
    LogEntry: '{}'
    LookupSource: MultiAddress
    MMRProof:
      lastLeafIndex: u64
      memberLeafIndex: u64
      proof: Vec<H256>
    MMRProofResult:
      mmrSize: u64
      proof: Text
    MMRRoot: Hash
    MappedRing: u128
    MerkleMountainRangeRootLog:
      ParentMmrRoot: Hash
      prefix: '[u8; 4; Prefix]'
    MessageData:
      fee: Fee
      payload: MessagePayload
    MessageFeeData:
      lane_id: LaneId
      payload: OutboundPayload
    MessageId: (Id, MessageNonce)
    MessageKey:
      lane_id: LaneId
      laneId: LaneId
      nonce: MessageNonce
    MessageNonce: u64
    MessagePayload: Vec<u8>
    MessagesDeliveryProofOf:
      bridged_header_hash: BridgedBlockHash
      lane: LaneId
      storage_proof: Vec<StorageProofItem>
    MessagesProofOf:
      bridged_header_hash: BridgedBlockHash
      lane: LaneId
      nonces_end: MessageNonce
      nonces_start: MessageNonce
      storage_proof: Vec<StorageProofItem>
    MillauBalance: u64
    MillauBlockHash: H512
    MillauBlockNumber: u64
    MillauDigest:
      logs: Vec<MillauDigestItem>
    MillauDigestItem:
      _enum:
        AuthoritiesChange: Vec<AuthorityId>
        ChangesTrieRoot: MillauBlockHash
        Consensus: Consensus
        Other: Vec<u8>
        PreRuntime: PreRuntime
        Seal: Seal
        SealV0: SealV0
    MillauHeader:
      digest: MillauDigest
      extrinsics_root: MillauBlockHash
      number: Compact<MillauBlockNumber>
      parent_Hash: MillauBlockHash
      state_root: MillauBlockHash
    MmrNodesPruningConfiguration:
      lastPosition: NodeIndex
      progress: NodeIndex
      step: NodeIndex
    MmrRootToSign:
      mmrRoot: Hash
      signatures: Vec<(EthereumAddress, EcdsaSignature)>
    MultiAddress: GenericMultiAddress
    MultiSigner:
      _enum:
        Ecdsa: '[u8;33]'
        Ed25519: H256
        Sr25519: H256
    NodeIndex: u64
    OpCode: '[u8; 4; OpCode]'
    OtherAddress:
      _enum:
        Eth: EthereumAddress
        Tron: TronAddress
    OtherSignature:
      _enum:
        Eth: EcdsaSignature
        Tron: EcdsaSignature
    OutboundLaneData:
      latest_generated_nonce: MessageNonce
      latest_received_nonce: MessageNonce
      oldest_unpruned_nonce: MessageNonce
    OutboundMessageFee: Fee
    OutboundPayload:
      call: BridgedOpaqueCall
      origin: CallOrigin
      spec_version: SpecVersion
      weight: Weight
    PalletId: LockIdentifier
    Parameter:
      _enum:
        MillauToRialtoConversionRate: u128
    Power: u32
    PowerOf:
      power: Power
    Precommit:
      target_hash: BridgedBlockHash
      target_number: BridgedBlockNumber
    ProxyAnnouncement:
      callHash: Hash
      height: BlockNumber
      real: AccountId
    ProxyDefinition:
      delay: BlockNumber
      delegate: AccountId
      proxyType: ProxyType
    ProxyType:
      _enum:
        Any: 'Null'
        EthereumBridge: 'Null'
        Governance: 'Null'
        IdentityJudgement: 'Null'
        NonTransfer: 'Null'
        Staking: 'Null'
    RKT:
      k: Balance
      r: Balance
    RawSolution: RawSolutionWith16
    Reasons:
      _enum:
        - Fee
        - Misc
        - All
    RedeemFor:
      _enum:
        Deposit: 'Null'
        Token: 'Null'
    RelayAffirmationId:
      index: u32
      relayHeaderId: EthereumBlockNumber
      round: u32
    RelayAffirmationT:
      bond: Balance
      maybeExtendedRelayAffirmationId: Option<RelayAffirmationId>
      relayHeaderParcels: EthereumRelayHeaderParcel
      relayer: AccountId
      verified: bool
    RelayAuthorityMessage: EcdsaMessage
    RelayAuthoritySignature: EcdsaSignature
    RelayAuthoritySigner: EcdsaAddress
    RelayAuthorityT:
      accountId: AccountId
      signer: EthereumAddress
      stake: Balance
      term: BlockNumber
    RelayHeaderId: EthereumBlockNumber
    RelayHeaderParcel: EthereumRelayHeaderParcel
    RelayProofs: EthereumRelayProofs
    RelayVotingState:
      ayes: Vec<AccountId>
      nays: Vec<AccountId>
    RelayerId: AccountId
    RingBalance: Balance
    ScheduledAuthoritiesChangeT:
      deadline: BlockNumber
      nextAuthorities: Vec<RelayAuthorityT>
    SignedPrecommit:
      id: AuthorityId
      precommit: Precommit
      signature: AuthoritySignature
    Signer: EthereumAddress
    SourceAccountId: AccountId
    SpanRecord:
      paidOut: RKT
      slashed: RKT
    SpecVersion: u32
    StakingBalanceT:
      _enum:
        KtonBalance: Balance
        RingBalance: Balance
    StakingLedgerT:
      activeDepositRing: Compact<Balance>
      activeKton: Compact<Balance>
      activeRing: Compact<Balance>
      claimedRewards: Vec<EraIndex>
      depositItems: Vec<TimeDepositItem>
      ktonStakingLock: StakingLock
      ringStakingLock: StakingLock
      stash: AccountId
    StakingLock:
      stakingAmount: Balance
      unbondings: Vec<Unbonding>
    Status:
      _enum:
        Free: 'Null'
        Reserved: 'Null'
    StorageProofItem: Vec<u8>
    Term: BlockNumber
    TimeDepositItem:
      expireTime: Compact<TsInMs>
      startTime: Compact<TsInMs>
      value: Compact<Balance>
    TransactionOutcome: '{}'
    TreasuryProposal:
      beneficiary: AccountId
      ktonBond: Balance
      ktonValue: Balance
      proposer: AccountId
      ringBond: Balance
      ringValue: Balance
    TronAddress: EthereumAddress
    TsInMs: u64
    UnappliedSlash:
      others: Vec<(AccountId, RKT)>
      own: RKT
      payout: RKT
      reporters: Vec<AccountId>
      validator: AccountId
    Unbonding:
      amount: Balance
      moment: BlockNumber
    UnrewardedRelayersState:
      messages_in_oldest_entry: MessageNonce
      total_messages: MessageNonce
      unrewarded_relayer_entries: MessageNonce
    UsableBalance:
      usableBalance: Balance
    ValidatorPrefs: ValidatorPrefsWithBlocked
  typesBundle:
    spec:
      Darwinia:
        types:
          - minmax:
              - 42
              - 43
            types:
              AccountInfo: AccountInfoWithTripleRefCount
              AccountInfoWithTripleRefCount:
                consumers: RefCount
                data: AccountData
                nonce: Index
                providers: RefCount
          - minmax:
              - 43
            types:
              AccountInfo: AccountInfoWithTripleRefCount
              AccountInfoWithTripleRefCount:
                consumers: RefCount
                data: AccountData
                nonce: Index
                providers: RefCount
                sufficients: RefCount
repository: ''
schema: ./schema.graphql
specVersion: 0.0.1